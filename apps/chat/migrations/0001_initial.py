# Generated by Django 5.1.5 on 2025-09-27 15:35

import apps.shared.encoders.encoder
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ChatResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(help_text="Fayl nomi.", max_length=255)),
                (
                    "file",
                    models.FileField(
                        help_text="Foydalanuvchi yuborgan fayl.",
                        upload_to="chat_resources/",
                    ),
                ),
                (
                    "size",
                    models.PositiveBigIntegerField(
                        blank=True, help_text="Fayl hajmi (byte).", null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, help_text="Fayl turi.", max_length=255, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ChatRoom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="New Chat",
                        help_text="Chat nomi.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "conversation_id",
                    models.CharField(
                        blank=True,
                        help_text="Chat xonasi id.",
                        max_length=128,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Chat Room",
                "verbose_name_plural": "Chat Rooms",
                "db_table": "chat_rooms",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "message",
                    models.TextField(blank=True, help_text="Xabar matni.", null=True),
                ),
                (
                    "openai_response_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=128, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Message",
                "verbose_name_plural": "Messages",
                "db_table": "messages",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="Specialization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("prompt", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="specializations"
                    ),
                ),
            ],
            options={
                "verbose_name": "Specialization",
                "verbose_name_plural": "Specializations",
                "db_table": "specializations",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserContext",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=apps.shared.encoders.encoder.PrettyJSONEncoder,
                        help_text="AI uchun foydalanuvchi ma'lumotlari.",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Context",
                "verbose_name_plural": "User Contexts",
                "db_table": "user_contexts",
            },
        ),
    ]
